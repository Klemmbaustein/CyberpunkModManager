# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Make Release

on:
  push:
    branches: [ "master" ]

permissions:
  contents: read

jobs:
  build-windows:
    runs-on: windows-latest

    steps:
    - uses: actions/checkout@v4

    - name: Setup VS devenv for amd64
      uses: seanmiddleditch/gha-setup-vsdevenv@master
      with:
        arch: amd64

    - name: Setup VS devenv for x86
      uses: seanmiddleditch/gha-setup-vsdevenv@master
      with:
        arch: x86

    - name: Init submodules
      run: git submodule update --init --recursive
    - name: Test ml.exe
      run: ml64.exe /? && ml.exe /?
    - name: Run Setup
      working-directory: ${{env.GITHUB_WORKSPACE}}
      run: ./Setup.ps1 CI_BUILD

    - name: Build
      working-directory: ${{env.GITHUB_WORKSPACE}}
      # Add additional options to the MSBuild command line here (like platform or verbosity level).
      # See https://docs.microsoft.com/visualstudio/msbuild/msbuild-command-line-reference
      run: msbuild CyberpunkModManager.sln /p:Configuration=Release

    - name: Make release
      working-directory: ${{env.GITHUB_WORKSPACE}}
      run: cd App && ./MakeRelease.ps1

    - name: Upload release artifact
      uses: actions/upload-artifact@v3
      env:
        GITHUB_TOKEN: ${{ github.token }}
      with:
        path: App/Release
        name: CyberpunkModManager-Windows-${{ github.run_number }}
  build-linux:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Init submodules
      run: git submodule update --init --recursive
      
    - name: Build App
      run: |
        cd App/
        cmake -S . -B Build -DCMAKE_BUILD_TYPE=RelWithDebInfo
        cmake --build Build/ -j 8
        
    - name: Make release
      run: |
        mkdir Release/
        cp app/ Release/app/
        cp Build/App Release/CyberpunkModManager

    - name: Upload release artifact
      uses: actions/upload-artifact@v3
      env:
        GITHUB_TOKEN: ${{ github.token }}
      with:
        path: App/Release
        name: CyberpunkModManager-Linux-${{ github.run_number }}